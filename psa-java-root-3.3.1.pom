<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.inetpsa.ciq</groupId>
        <artifactId>psa-root-parent</artifactId>
        <version>3.3.1</version>
    </parent>
    <groupId>com.inetpsa.ciq</groupId>
    <artifactId>psa-java-root</artifactId>
    <version>3.3.1</version>
    <packaging>pom</packaging>
    <name>[Parent POMs] PSA Java</name>
    <description>Parent for PSA Java projects</description>
    <url>http://ciq-projects.inetpsa.com/${envInst}${sitePublishSubDir}</url>
    <inceptionYear>2013</inceptionYear>
    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${versionPluginsource}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${versionPluginJar}</version>
                    <configuration>
                        <archive>
                            <!-- addDefaultImplementationEntries/addDefaultSpecificationEntries don't contain build timestamp => We are using manifestEntries,
                                including project version too -->
                            <manifestEntries>
                                <!-- PSA property (French format without another Maven line configuration) -->
                                <Build-Timestamp>${psa.build.timestamp}</Build-Timestamp>
                                <Project-Version>${project.version}</Project-Version>
                            </manifestEntries>
                        </archive>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${versionPluginFailsafe}</version>
                    <executions>
                        <execution>
                            <id>failsafe-integration-test</id>
                            <goals>
                                <goal>integration-test</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>failsafe-verify</id>
                            <goals>
                                <goal>verify</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <encoding>${project.build.sourceEncoding}</encoding>
                        <jvm>${currentJavaPath}/java</jvm>
                        <argLine>${mavenOpts} -Djava.net.preferIPv4Stack=true ${argLine}</argLine>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${versionPluginCompiler}</version>
                    <configuration>
                        <source>${javaSourceCompatibility}</source>
                        <target>${javaTargetCompatibility}</target>
                        <fork>true</fork>
                        <executable>${currentJavaPath}/javac</executable>
                        <encoding>${project.build.sourceEncoding}</encoding>
                        <maxmem>${compilerMaxmem}</maxmem>
                        <compilerArgument>${compilerArgument}</compilerArgument>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-ear-plugin</artifactId>
                    <version>${versionPluginEar}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-ejb-plugin</artifactId>
                    <version>${versionPluginEjb}</version>
                    <configuration>
                        <archive>
                            <manifest>
                                <addClasspath>true</addClasspath>
                            </manifest>
                        </archive>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${versionPluginJacoco}</version>
                    <configuration>
                        <skip>${maven.test.skip}</skip>
                        <output>file</output>
                        <!-- Aggregation between different modules and UT / IT tests if same 'jacocoExecFile' defined -->
                        <append>true</append>
                    </configuration>
                    <executions>
                        <execution>
                            <id>default-prepare-agent</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                            <configuration>
                                <destFile>${jacocoExecFile}</destFile>
                            </configuration>
                        </execution>
                        <execution>
                            <id>default-prepare-agent-it</id>
                            <goals>
                                <goal>prepare-agent-integration</goal>
                            </goals>
                            <configuration>
                                <destFile>${jacocoExecItFile}</destFile>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${versionPluginSurefire}</version>
                    <configuration>
                        <reportFormat>xml</reportFormat>
                        <jvm>${currentJavaPath}/java</jvm>
                        <!-- mavenOpts:Memory/encoding, preferIPv4Stack:JGroupsUsage, argLine=JacocoAgentBinding -->
                        <argLine>${mavenOpts} -Djava.net.preferIPv4Stack=true ${argLine}</argLine>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>${versionPluginWar}</version>
                    <configuration>
                        <warSourceDirectory>${webContent}</warSourceDirectory>
                        <warSourceExcludes>${warSourceExcludes}</warSourceExcludes>
                        <resourceEncoding>${project.build.sourceEncoding}</resourceEncoding>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>xdoclet-maven-plugin</artifactId>
                    <version>${versionPluginXdoclet}</version>
                </plugin>

                <!-- Plugins PSA -->
                <plugin>
                    <groupId>com.inetpsa.jip.plugins</groupId>
                    <artifactId>maven-psa-dashboard-plugin</artifactId>
                    <version>${versionPluginPsaDashboard}</version>
                    <configuration>
                        <encoding>${project.build.sourceEncoding}</encoding>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>com.inetpsa.jip.plugins</groupId>
                    <artifactId>maven-deployer-plugin</artifactId>
                    <version>${versionPluginDeployer}</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <!-- Plugin defined here and not in pluginManagement for -->
                <!-- 1) Direct usage with correct configuration (but not binded on a phase) -->
                <!-- 2) Dependencies taken for report execution via psaReports profile -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${versionPluginCheckstyle}</version>
                <configuration>
                    <!-- Config location is in 'com.inetpsa.eat.eclipse.quality.checkstyle.plugin' dependency -->
                    <configLocation>${versionConventionsCheckstylePSA}</configLocation>
                </configuration>
                <dependencies>
                    <!-- Checktyle core version (upgrade : https://maven.apache.org/plugins/maven-checkstyle-plugin/examples/upgrading-checkstyle.html) -->
                    <dependency>
                        <groupId>com.puppycrawl.tools</groupId>
                        <artifactId>checkstyle</artifactId>
                        <version>${versionPluginCheckstyleCoreDependency}</version>
                    </dependency>
                    <!-- PSA Checkstyle implementation (mainly Lego2) -->
                    <dependency>
                        <groupId>com.inetpsa.eat00.eclipse.quality.checkstyle</groupId>
                        <artifactId>com.inetpsa.eat.eclipse.quality.checkstyle.plugin</artifactId>
                        <version>${versionPluginCheckstylePSA}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
    <properties>
        <!-- Properties that projects can override -->
        <!--<javaSourceCompatibility>1.7</javaSourceCompatibility>-->
        <!--<javaTargetCompatibility>1.7</javaTargetCompatibility>-->
        <!--<currentJavaPath>${javaPath_17}</currentJavaPath>-->
        <javaSourceCompatibility>1.8</javaSourceCompatibility>
        <javaTargetCompatibility>1.8</javaTargetCompatibility>
        <currentJavaPath>${javaPath_18}</currentJavaPath>

        <versionLEGO />
        <compilerMaxmem>256m</compilerMaxmem>
        <compilerArgument />
        <versionPluginCheckstylePSA>6.0.0</versionPluginCheckstylePSA>
        <versionConventionsCheckstylePSA>Conventions-PSA-6.0.0.xml</versionConventionsCheckstylePSA>
        <qualificationAppliJava>2.0.0</qualificationAppliJava>
        <webContent>${basedir}/WebContent</webContent> <!-- maven-war-plugin directory, default maven is '${basedir}/src/main/webapp' but in PSA, projects created with Eclipse conventions -->
        <warSourceExcludes>**/lib/*.jar,**/*.class</warSourceExcludes> <!-- maven-war-plugin exclusions, security to delete content not generated by maven. For Jboss 4.x m2e use, replace this value by 'nothing' (bug with m2e-wtp) -->
        <resourcesOutsourcedDirectory>${project.build.directory}/resources-outsourced</resourcesOutsourcedDirectory>

        <!-- To sign JARs -->
        <keyStoreLocation>${session.executionRootDirectory}/psa/security</keyStoreLocation>
        <keyStoreFileName>${envInst}Keystore.pfx</keyStoreFileName>
        <signJarAlias>${envInst}</signJarAlias>
        <!-- the jarsigner.storepass and jarsigner.keypass must be defined in the passwords.crypt file -->

        <!-- Properties that projects can't override -->
        <jacocoExecFile>${project.build.directory}/jacoco.exec</jacocoExecFile> <!-- jacocoExec in variable to be configured as modules aggregation if needed : '${project.basedir}/../jacoco.exec' -->
        <jacocoExecItFile>${project.build.directory}/jacoco-it.exec</jacocoExecItFile> <!-- jacocoExecIt in variable to be configured as modules/UT aggregation if needed : '${project.basedir}/../jacoco-it.exec' -->
        <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin> <!-- SonarQube java coverage forced, to be ok with reuseReports configuration -->
        <sonar.jacoco.reportPath>${jacocoExecFile}</sonar.jacoco.reportPath> <!-- Jacoco datafile configuration for SonarQube UTs -->
        <sonar.jacoco.itReportPath>${jacocoExecItFile}</sonar.jacoco.itReportPath> <!-- Jacoco datafile configuration for SonarQube ITs -->
        <!-- Maven/OpenSource plugins versions -->
        <versionPluginCheckstyle>2.17</versionPluginCheckstyle>
        <versionPluginCheckstyleCoreDependency>6.18</versionPluginCheckstyleCoreDependency>
        <versionPluginSurefire>2.20</versionPluginSurefire>
        <versionPluginSurefireReport>2.20</versionPluginSurefireReport>
        <versionPluginFailsafe>2.20</versionPluginFailsafe>
        <versionPluginJacoco>0.7.9</versionPluginJacoco>
        <versionPluginJavadoc>2.10.4</versionPluginJavadoc>
        <versionPluginJxr>2.5</versionPluginJxr>
        <versionPluginCompiler>3.6.1</versionPluginCompiler>
        <versionPluginEar>2.10.1</versionPluginEar>
        <versionPluginEjb>2.5.1</versionPluginEjb>
        <versionPluginJar>3.0.2</versionPluginJar>
        <versionPluginWar>3.1.0</versionPluginWar>
        <versionPluginXdoclet>1.0</versionPluginXdoclet>
        <versionPluginJDepend>2.0</versionPluginJDepend>
        <versionPluginJavaNcss>2.1</versionPluginJavaNcss>
        <versionPluginTaglist>2.5.3-PSA</versionPluginTaglist>
        <versionPluginPmd>3.8</versionPluginPmd>
        <versionPluginsource>3.0.1</versionPluginsource>
        <versionPluginProguard>2.0.14</versionPluginProguard>
        <versionPluginSign>1.4</versionPluginSign>
        <!-- PSA -->
        <versionPluginPsaDashboard>3.0.0</versionPluginPsaDashboard>
        <versionPluginDeployer>3.1.0</versionPluginDeployer>
    </properties>
    <profiles>

        <!-- ProGuard : Profile allows to signing JARs -->
        <profile>
            <id>signJar</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jarsigner-plugin</artifactId>
                        <version>${versionPluginSign}</version>
                        <configuration>
                            <keystore>${keyStoreLocation}/${keyStoreFileName}</keystore>
                            <alias>${signJarAlias}</alias>
                            <storetype>pkcs12</storetype>
                        </configuration>
                        <executions>
                            <execution>
                                <id>sign</id>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- ProGuard : Profile allows source code obfuscation -->
        <profile>
            <id>psaObfuscate</id>
            <properties>
                <java.bootstrap.classes>${java.home}/lib/rt.jar</java.bootstrap.classes>
                <java.cryptographic.extension.classes>${java.home}/lib/jce.jar</java.cryptographic.extension.classes>
                <java.secure.socket.extension.classes>${java.home}/lib/jsse.jar</java.secure.socket.extension.classes>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.github.wvengen</groupId>
                        <artifactId>proguard-maven-plugin</artifactId>
                        <version>${versionPluginProguard}</version>
                        <executions>
                            <execution>
                                <id>proguard</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>proguard</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <outjar>${project.build.finalName}.jar</outjar>
                            <libs>
                                <lib>${java.bootstrap.classes}</lib>
                                <lib>${java.cryptographic.extension.classes}</lib>
                                <lib>${java.secure.socket.extension.classes}</lib>
                            </libs>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>psaComponentRelease</id>
            <build>
                <plugins>
                    <!-- Javadoc component deployment -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>${versionPluginJavadoc}</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
            <reporting>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>${versionPluginJavadoc}</version>
                        <inherited>true</inherited>
                        <configuration>
                            <quiet>true</quiet>
                            <charset>${project.build.sourceEncoding}</charset>
                            <encoding>${project.build.sourceEncoding}</encoding>
                            <docencoding>${project.build.sourceEncoding}</docencoding>
                        </configuration>
                        <reportSets>
                            <reportSet>
                                <reports>
                                    <report>javadoc</report>
                                    <report>test-javadoc</report>
                                </reports>
                            </reportSet>
                        </reportSets>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jxr-plugin</artifactId>
                        <version>${versionPluginJxr}</version>
                        <configuration>
                            <inputEncoding>${project.build.sourceEncoding}</inputEncoding>
                            <outputEncoding>${project.build.sourceEncoding}</outputEncoding>
                        </configuration>
                    </plugin>
                </plugins>
            </reporting>
        </profile>
        <profile>
            <id>psaComponentUmlRelease</id>
            <properties>
                <versionYwork>3.0.02</versionYwork>
                <resourcesYwork>${project.build.directory}/yworks-resources</resourcesYwork>
            </properties>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-dependency-plugin</artifactId>
                            <version>${versionPluginDependency}</version>
                            <executions>
                                <execution>
                                    <id>unpack</id>
                                    <phase>generate-sources</phase>
                                    <goals>
                                        <goal>unpack</goal>
                                    </goals>
                                    <configuration>
                                        <artifactItems>
                                            <artifactItem>
                                                <groupId>com.ywork</groupId>
                                                <artifactId>umldoclet-resources</artifactId>
                                                <version>${versionYwork}</version>
                                                <type>jar</type>
                                                <overWrite>false</overWrite>
                                                <outputDirectory>${resourcesYwork}</outputDirectory>
                                            </artifactItem>
                                        </artifactItems>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
                <plugins>
                    <!-- Unpack Yworks resources, needed for UML Javadoc -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                    </plugin>
                    <!-- Javadoc component deployment -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>${versionPluginJavadoc}</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
            <reporting>
                <plugins>
                    <!-- Javadoc with Uml generation -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>${versionPluginJavadoc}</version>
                        <inherited>true</inherited>
                        <configuration>
                            <quiet>true</quiet>
                            <charset>${project.build.sourceEncoding}</charset>
                            <encoding>${project.build.sourceEncoding}</encoding>
                            <docencoding>${project.build.sourceEncoding}</docencoding>
                            <!-- Doclet -->
                            <doclet>ydoc.doclets.YStandard</doclet>
                            <docletArtifact>
                                <groupId>com.ywork</groupId>
                                <artifactId>umldoclet</artifactId>
                                <version>${versionYwork}</version>
                            </docletArtifact>
                            <additionalparam>-umlautogen -resourcepath ${resourcesYwork}</additionalparam>
                            <additionalJOptions>
                                <additionalJOption>-J-Djava.awt.headless=true</additionalJOption>
                            </additionalJOptions>
                        </configuration>
                        <reportSets>
                            <reportSet>
                                <reports>
                                    <report>javadoc</report>
                                    <report>test-javadoc</report>
                                </reports>
                            </reportSet>
                        </reportSets>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jxr-plugin</artifactId>
                        <version>${versionPluginJxr}</version>
                        <configuration>
                            <inputEncoding>${project.build.sourceEncoding}</inputEncoding>
                            <outputEncoding>${project.build.sourceEncoding}</outputEncoding>
                        </configuration>
                    </plugin>
                </plugins>
            </reporting>
        </profile>
        <profile>
            <id>psaReports</id>
            <reporting>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-checkstyle-plugin</artifactId>
                        <version>${versionPluginCheckstyle}</version>
                        <configuration>
                            <!-- configLocation should be redefined here, not taken from previous plugin configuration -->
                            <configLocation>${versionConventionsCheckstylePSA}</configLocation>
                            <enableRulesSummary>false</enableRulesSummary>
                            <excludes>${reportExcludes}</excludes>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>taglist-maven-plugin</artifactId>
                        <version>${versionPluginTaglist}</version>
                        <configuration>
                            <tags />
                            <tagListOptions>
                                <tagClasses>
                                    <tagClass>
                                        <displayName>Todo Work</displayName>
                                        <tags>
                                            <tag>
                                                <matchString>@todo</matchString>
                                                <matchType>ignoreCase</matchType>
                                            </tag>
                                            <tag>
                                                <matchString>todo</matchString>
                                                <matchType>ignoreCase</matchType>
                                            </tag>
                                            <tag>
                                                <matchString>fixme</matchString>
                                                <matchType>ignoreCase</matchType>
                                            </tag>
                                        </tags>
                                    </tagClass>
                                    <tagClass>
                                        <displayName>Deprecated</displayName>
                                        <tags>
                                            <tag>
                                                <matchString>@deprecated</matchString>
                                                <matchType>ignoreCase</matchType>
                                            </tag>
                                            <tag>
                                                <matchString>Deprecated</matchString>
                                                <matchType>annotation</matchType>
                                            </tag>
                                        </tags>
                                    </tagClass>
                                    <tagClass>
                                        <displayName>Quality Uncheck</displayName>
                                        <tags>
                                            <tag>
                                                <matchString>CHECKSTYLE:OFF</matchString>
                                            </tag>
                                            <tag>
                                                <matchString>SuppressWarnings</matchString>
                                                <matchType>annotation</matchType>
                                            </tag>
                                        </tags>
                                    </tagClass>
                                </tagClasses>
                            </tagListOptions>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>jdepend-maven-plugin</artifactId>
                        <version>${versionPluginJDepend}</version>
                        <configuration>
                            <classDirectory>${classDirectory}</classDirectory>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>javancss-maven-plugin</artifactId>
                        <version>${versionPluginJavaNcss}</version>
                        <configuration>
                            <excludes>
                                <exclude>${reportExcludes}</exclude>
                            </excludes>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <version>${versionPluginJacoco}</version>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-pmd-plugin</artifactId>
                        <version>${versionPluginPmd}</version>
                        <configuration>
                            <excludes>
                                <exclude>${reportExcludes}</exclude>
                            </excludes>
                        </configuration>
                        <reportSets>
                            <reportSet>
                                <reports>
                                    <report>cpd</report>
                                </reports>
                            </reportSet>
                        </reportSets>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-report-plugin</artifactId>
                        <version>${versionPluginSurefireReport}</version>
                        <reportSets>
                            <reportSet>
                                <reports>
                                    <report>report-only</report>
                                    <report>failsafe-report-only</report>
                                </reports>
                            </reportSet>
                        </reportSets>
                    </plugin>
                </plugins>
            </reporting>
        </profile>
        <profile>
            <id>psaArchive</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>${versionPluginDependency}</version>
                        <configuration>
                            <outputDirectory>target/psa-archive-lib</outputDirectory>
                            <includeScope>runtime</includeScope>
                            <includeTypes>jar</includeTypes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!-- Profile used in multi modules projects to copy psa templates filtered in test output directory -->
        <!-- To activate profile, create in modules who need configuration the file 'psa/valorisation/copyPsaTemplatesFilteredInTestDirectory.active' -->
        <profile>
            <id>copyPsaTemplatesFilteredInTestDirectory</id>
            <activation>
                <file>
                    <exists>psa/valorisation/copyPsaTemplatesFilteredInTestDirectory.active</exists>
                </file>
            </activation>
            <properties>
                <valo.env>local</valo.env>
                <psaTemplatesFilteredOutputDirectory>${project.build.testOutputDirectory}</psaTemplatesFilteredOutputDirectory>
            </properties>
            <build>
                <pluginManagement>
                    <plugins>
                        <!-- Filter PSA templates as test resources (externalized configuration) definition, called in each modules with resources -->
                        <plugin>
                            <artifactId>maven-resources-plugin</artifactId>
                            <version>${versionPluginResources}</version>
                            <executions>
                                <execution>
                                    <id>init-psa-templates-filtered-test-directory</id>
                                    <phase>process-resources</phase>
                                    <goals>
                                        <goal>copy-resources</goal>
                                    </goals>
                                    <configuration>
                                        <encoding>${project.build.sourceEncoding}</encoding>
                                        <resources>
                                            <resource>
                                                <directory>${basedir}/${project.parent.relativePath}/psa/valorisation/templates</directory>
                                                <filtering>true</filtering>
                                            </resource>
                                        </resources>
                                        <outputDirectory>${psaTemplatesFilteredOutputDirectory}</outputDirectory>
                                        <filters>
                                            <filter>${basedir}/${project.parent.relativePath}/psa/valorisation/dictionaries/dico-${valo.env}.properties</filter>
                                        </filters>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
        <!-- Profile used to copy psa templates filtered in build output directory for local server develepment -->
        <!-- In addition to 'copyPsaTemplatesFilteredInTestDirectory' use, declare profile 'localServerCopyPsaTemplatesFiltered' in m2e eclipse configuration -->
        <profile>
            <id>localServerCopyPsaTemplatesFiltered</id>
            <properties>
                <psaTemplatesFilteredOutputDirectory>${project.build.OutputDirectory}</psaTemplatesFilteredOutputDirectory>
            </properties>
        </profile>
        <!-- Profiles initLocalResourcesXXX used to filtering PSA templates in an outsourced directory, to add in server classpath -->
        <!-- It is automaticaly configured as m2 profile executed by psa-initialiser plugin when property 'resourcesOutsourcedDirectory' configured by
            project -->
        <profile>
            <!-- Profile initLocalResourcesGeneric must be called -->
            <id>initLocalResourcesStandaloneProject</id>
            <properties>
                <initLocalResourcesDictionary>${basedir}/psa/valorisation/dictionaries/dico-${valo.env}.properties</initLocalResourcesDictionary>
            </properties>
        </profile>
        <profile>
            <!-- Profile initLocalResourcesGeneric must be called -->
            <id>initLocalResourcesMultiModulesProject</id>
            <properties>
                <initLocalResourcesDictionary>${basedir}/${project.parent.relativePath}/psa/valorisation/dictionaries/dico-${valo.env}.properties</initLocalResourcesDictionary>
            </properties>
        </profile>
        <profile>
            <id>initLocalResourcesGeneric</id>
            <properties>
                <valo.env>local</valo.env>
            </properties>
            <build>
                <pluginManagement>
                    <plugins>
                        <!-- Configuration of maven-resources-plugin in profile, because this configuration can't be apply every where -->
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-resources-plugin</artifactId>
                            <version>${versionPluginResources}</version>
                            <executions>
                                <execution>
                                    <id>init-psa-templates-filtered-outsourced</id>
                                    <phase>process-sources</phase>
                                    <goals>
                                        <goal>copy-resources</goal>
                                    </goals>
                                    <configuration>
                                        <encoding>${project.build.sourceEncoding}</encoding>
                                        <resources>
                                            <resource>
                                                <directory>psa/valorisation/templates/</directory>
                                                <filtering>true</filtering>
                                                <includes>
                                                    <include>**/*.*</include>
                                                </includes>
                                                <excludes>
                                                    <exclude>readme.txt</exclude>
                                                </excludes>
                                            </resource>
                                        </resources>
                                        <outputDirectory>${resourcesOutsourcedDirectory}</outputDirectory>
                                        <filters>
                                            <filter>${initLocalResourcesDictionary}</filter>
                                        </filters>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <version>${versionPluginResources}</version>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- PSA ROOT Java generation ; required for no inherit some properties to project using this pom as parent -->
        <profile>
            <id>generateRoot</id>
            <distributionManagement>
                <site>
                    <id>projectSite</id>
                    <url>${urlProjectSite}</url>
                </site>
            </distributionManagement>
            <build>
                <plugins>
                    <!-- If generated current pom site descriptor must be attached -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-site-plugin</artifactId>
                        <version>${versionPluginSite}</version>
                        <inherited>false</inherited>
                        <executions>
                            <execution>
                                <id>attach-descriptor</id>
                                <goals>
                                    <goal>attach-descriptor</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
